@using X.PagedList.Mvc;
@using X.PagedList;
@model IEnumerable<MVC5Course.Models.客戶聯絡人>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<p>
    @using (Html.BeginForm("Search", "客戶聯絡人", FormMethod.Get, null))
    {
        @*<input type="Search" name="keyWord" placeholder="請輸入關鍵字" />*@
        @Html.TextBox("KeyWord", null, new { placeholder = "請輸入關鍵字 姓名" })//顯示之前輸入的關鍵字
        <input type="submit" />
    }
</p>

<p>
    @using (Html.BeginForm("Filter", "客戶聯絡人", FormMethod.Get, null))
    {
        @Html.DropDownList("職稱", null, "請選擇", htmlAttributes: new { @class = "form-control" })  
        <input type="submit" />
        }
    </p>
<p>
    @Html.ActionLink("匯出客戶聯絡人Excel", "ExportExcel")
</p>

@using (Html.BeginForm("BatchUpdate", "客戶聯絡人"))
{

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.職稱)
                @Html.ActionLink("Desc", "FieldSort", new { Field = "職稱", type = "Desc", page = ViewBag.CurrPage })
                @Html.ActionLink("Asc", "FieldSort", new { Field = "職稱", type = "Asc", page = ViewBag.CurrPage })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.姓名)
                @Html.ActionLink("Desc", "FieldSort", new { Field = "姓名", type = "Desc", page = ViewBag.CurrPage })
                @Html.ActionLink("Asc", "FieldSort", new { Field = "姓名", type = "Asc", page = ViewBag.CurrPage })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
                @Html.ActionLink("Desc", "FieldSort", new { Field = "Email", type = "Desc", page = ViewBag.CurrPage })
                @Html.ActionLink("Asc", "FieldSort", new { Field = "Email", type = "Asc", page = ViewBag.CurrPage })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.手機)
                @Html.ActionLink("Desc", "FieldSort", new { Field = "手機", type = "Desc", page = ViewBag.CurrPage })
                @Html.ActionLink("Asc", "FieldSort", new { Field = "手機", type = "Asc", page = ViewBag.CurrPage })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.電話)
                @Html.ActionLink("Desc", "FieldSort", new { Field = "電話", type = "Desc", page = ViewBag.CurrPage })
                @Html.ActionLink("Asc", "FieldSort", new { Field = "電話", type = "Asc", page = ViewBag.CurrPage })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.客戶資料.客戶名稱)
            </th>
            <th></th>
        </tr>

        @{
            var data = Model.ToArray(); //將Model轉為Data Array
        }

        @for (var i = 0; i < data.Length; i++)
        {
            @Html.HiddenFor(modelItem => data[i].Id)
            <tr>
                <td>
                    @Html.EditorFor(modelItem => data[i].職稱)
                    @Html.ValidationMessageFor(model => data[i].職稱, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => data[i].姓名)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => data[i].Email)
                </td>
                <td>
                    @Html.EditorFor(modelItem => data[i].手機)
                    @Html.ValidationMessageFor(model => data[i].手機, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(modelItem => data[i].電話)
                    @Html.ValidationMessageFor(model => data[i].電話, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => data[i].客戶資料.客戶名稱)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = data[i].Id }) |
                    @Html.ActionLink("Details", "Details", new { id = data[i].Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = data[i].Id })
                </td>
            </tr>
        }

    </table>
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, ViewBag.CurrPage }))
    <input type="submit" value="批次更新" />
}
